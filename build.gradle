buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "http://maven.k-int.com/content/repositories/releases" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.2.9"
    }
}

version "1.0.67"
group "org.olf.reshare.dm.directory"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.plugins.views-json"


repositories {
  mavenLocal()
  // Ian: Added k-int nexus to act as a proxy repo for remote repos, and k-int specifics
  maven { url "http://nexus.k-int.com/content/groups/public" }
  maven { url "http://maven.k-int.com/content/repositories/releases" }
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "http://maven.k-int.com/content/repositories/snapshots" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    runtime "org.grails.plugins:events"
    compile "org.grails:grails-plugin-async"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-datastore-rest-client"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    compile 'com.k_int.grails:web-toolkit:3.6.3'
    compile 'com.k_int.okapi:grails-okapi:3.6.10'

    compile "org.postgresql:postgresql:42.2.4"
    compile "org.grails.plugins:spring-security-core:3.2.0"
    compile 'org.grails.plugins:database-migration:3.0.4'
    compile 'org.liquibase:liquibase-core:3.5.5'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}


sourceSets {
  main {
    resources {
      srcDir 'grails-app/migrations'
    }
  }
}


// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

// Props can be set in ~/.gradle/gradle.properties
publishing {
  repositories {
    maven {
      url "http://nexus.k-int.com/content/repositories/releases/"
      credentials {
        username project.hasProperty('knowintNexusUser') ? knowintNexusUser :''
        password project.hasProperty('knowintNexusPass') ? knowintNexusPass :''
      }
    }
  }
}
